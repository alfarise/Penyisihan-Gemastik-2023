

# This file was *autogenerated* from the file solve.sage
from sage.all_cmdline import *   # import sage library

_sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0)
from pwn import *

#p = process(['python3', '../src/chall.py'])
p = remote('localhost', 10000)

xy = []

for _ in range(_sage_const_2 ):
    xy.append(eval(p.recvuntil(b'\n')[:-_sage_const_1 ]))

L = Matrix([
    [xy[_sage_const_0 ][_sage_const_1 ], xy[_sage_const_1 ][_sage_const_1 ], _sage_const_1 ],
    [-xy[_sage_const_0 ][_sage_const_0 ], -xy[_sage_const_1 ][_sage_const_0 ], _sage_const_1 ],
    [-xy[_sage_const_0 ][_sage_const_0 ]**_sage_const_2 , -xy[_sage_const_1 ][_sage_const_0 ]**_sage_const_2 , _sage_const_1 ],
])
L = L.LLL()
pretty_print(L)

p.sendlineafter(b'password: ', str(L[_sage_const_1 ][_sage_const_0 ]).encode())
p.interactive()

'''
# example, the result should be 1337
(x1, y1) = (10880, 7225308917177)
(x2, y2) = (1249, 95288335886)


L = Matrix(
    [
        [y1, y2, 1],
        [-x1, -x2, 1],
        [-x1^2, -x2^2, 1],
    ]
)

pretty_print(L.LLL())
'''

